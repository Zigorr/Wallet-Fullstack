"""Add currency support and recurring transactions

Revision ID: bf81e26175d9
Revises: 01c2fb11716a
Create Date: 2025-06-20 01:23:41.226913

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf81e26175d9'
down_revision: Union[str, None] = '01c2fb11716a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recurring_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('type', sa.Enum('INCOME', 'EXPENSE', 'TRANSFER', name='transactiontype'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('currency', sa.Enum('USD', 'EGP', 'GBP', 'EUR', name='currency'), nullable=False),
    sa.Column('frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='recurrencefrequency'), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_due_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recurring_transactions_id'), 'recurring_transactions', ['id'], unique=False)
    op.add_column('accounts', sa.Column('currency', sa.Enum('USD', 'EGP', 'GBP', 'EUR', name='currency'), nullable=False))
    op.add_column('transactions', sa.Column('currency', sa.Enum('USD', 'EGP', 'GBP', 'EUR', name='currency'), nullable=False))
    op.add_column('transactions', sa.Column('recurring_transaction_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'transactions', 'recurring_transactions', ['recurring_transaction_id'], ['id'])
    op.add_column('users', sa.Column('default_currency', sa.Enum('USD', 'EGP', 'GBP', 'EUR', name='currency'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'default_currency')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_column('transactions', 'recurring_transaction_id')
    op.drop_column('transactions', 'currency')
    op.drop_column('accounts', 'currency')
    op.drop_index(op.f('ix_recurring_transactions_id'), table_name='recurring_transactions')
    op.drop_table('recurring_transactions')
    # ### end Alembic commands ###
